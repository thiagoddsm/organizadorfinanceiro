<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Controle Financeiro Semanal - Regina</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .task-item:hover {
            background-color: #f9fafb;
        }
        .completed {
            text-decoration: line-through;
            color: #9ca3af;
        }
        .month-checkbox {
            width: 1.25rem; /* 20px */
            height: 1.25rem; /* 20px */
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8 max-w-6xl">
        <header class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-900">Controle Financeiro Semanal</h1>
            <p class="text-md text-gray-600 mt-1">Página de acompanhamento para Regina</p>
        </header>

        <!-- Seção de Ferramentas Úteis -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-8">
            <h2 class="text-xl font-semibold mb-3 text-center">Ferramentas Úteis</h2>
            <div class="flex flex-col sm:flex-row justify-center items-center gap-4">
                <a href="https://thiagoddsm.github.io/ImportEklesia/" target="_blank" class="w-full sm:w-auto bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300 text-center">
                    Import Eklesia OFX/CSV
                </a>
                <a href="https://www.ofxfacil.com.br/pdf-ofx" target="_blank" class="w-full sm:w-auto bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300 text-center">
                    Gerador de OFX
                </a>
            </div>
        </div>

        <!-- Seção de Status dos Bancos -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <h2 class="text-xl font-semibold mb-4 border-b pb-2">Status de Atualização dos Bancos</h2>
            <div class="overflow-x-auto">
                <table class="w-full text-sm text-left text-gray-700" id="bank-status-table">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-100">
                        <tr>
                            <th scope="col" class="px-4 py-3">Banco</th>
                            <th scope="col" class="px-4 py-3">Última Atualização</th>
                            <th scope="col" class="px-4 py-3">Observações</th>
                            <th scope="col" class="px-4 py-3 text-center">Verificado</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Linhas da tabela serão preenchidas via JS -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Seção de Controle de Extratos no Drive -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <h2 class="text-xl font-semibold mb-4 border-b pb-2">Controle de Extratos no Drive</h2>
            <div class="overflow-x-auto">
                <table class="w-full text-sm text-left text-gray-700" id="drive-status-table">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-100">
                        <!-- Cabeçalho dos meses preenchido via JS -->
                    </thead>
                    <tbody id="drive-status-body">
                        <!-- Conteúdo da tabela preenchido via JS -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Seção de Tarefas Semanais -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <h2 class="text-xl font-semibold mb-4 border-b pb-2">Checklist de Tarefas da Semana</h2>
            <div id="task-list" class="space-y-6">
                <!-- Tarefas serão inseridas aqui via JS -->
            </div>
        </div>
        
        <!-- Botões de Ação -->
        <div class="flex justify-end mt-8 space-x-4">
            <button id="clear-button" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
                Limpar Dados
            </button>
            <button id="save-button" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
                Salvar Progresso
            </button>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let banks = [];
            
            const months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];

            function getInitialBanks() {
                return [
                    { name: 'Santander', status: '2024-08-20', obs: 'Pente fino pendente (saldo não bate).', checked: false, drive: Array(12).fill(false) },
                    { name: 'Bradesco', status: '', obs: '', checked: false, drive: Array(12).fill(false) },
                    { name: 'Bradesco Niterói', status: '', obs: '', checked: false, drive: Array(12).fill(false) },
                    { name: 'Caixa', status: '2024-04-29', obs: '', checked: false, drive: Array(12).fill(false) },
                    { name: 'Mercado Pago', status: '', obs: 'Verificar se está em dia.', checked: false, drive: Array(12).fill(false) },
                    { name: 'Cora', status: '', obs: 'Verificar R$50,00 a mais.', checked: false, drive: Array(12).fill(false) },
                    { name: 'PagBank', status: '', obs: 'Itens não conciliados pendentes.', checked: false, drive: Array(12).fill(false) },
                    { name: 'Caixa (Espécie)', status: '', obs: '', checked: false, drive: Array(12).fill(false) }
                ];
            }

            const tasks = {
                'Segunda-feira': [{ id: 'seg1', text: 'Lançamentos do Caixa Espécie' }, { id: 'seg2', text: 'Reunião de equipe' }],
                'Terça-feira': [{ id: 'ter1', text: 'Lançamentos e conciliação do Mercado Pago' }, { id: 'ter2', text: 'Lançamentos e conciliação do Santander' }],
                'Quinta-feira': [{ id: 'qui1', text: 'Lançamentos e conciliação do Cora' }, { id: 'qui2', text: 'Lançamentos e conciliação da Caixa' }, { id: 'qui3', text: 'Lançamentos e conciliação do Bradesco (ambas)' }],
                'Sexta-feira': [{ id: 'sex1', text: 'Lançamentos e conciliação do Caixa Espécie' }, { id: 'sex2', text: 'Lançamentos e conciliação do PagBank' }]
            };

            const bankTableBody = document.querySelector('#bank-status-table tbody');
            const driveTableHead = document.querySelector('#drive-status-table thead');
            const driveTableBody = document.getElementById('drive-status-body');
            const taskListContainer = document.getElementById('task-list');
            const saveButton = document.getElementById('save-button');
            const clearButton = document.getElementById('clear-button');

            function renderBankTable() {
                bankTableBody.innerHTML = '';
                banks.forEach((bank, index) => {
                    const row = document.createElement('tr');
                    row.className = 'bg-white border-b';
                    row.innerHTML = `
                        <td class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap">${bank.name}</td>
                        <td class="px-4 py-3"><input type="date" id="date-${index}" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2" value="${bank.status}"></td>
                        <td class="px-4 py-3"><input type="text" id="obs-${index}" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2" placeholder="Adicionar observação..." value="${bank.obs}"></td>
                        <td class="px-4 py-3 text-center"><input type="checkbox" id="check-${index}" class="w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"></td>
                    `;
                    bankTableBody.appendChild(row);
                    document.getElementById(`check-${index}`).checked = bank.checked;
                });
            }
            
            function renderDriveTable() {
                let headerHTML = '<tr><th scope="col" class="px-4 py-3">Banco</th>';
                months.forEach(month => { headerHTML += `<th scope="col" class="px-2 py-3 text-center">${month}</th>`; });
                headerHTML += '</tr>';
                driveTableHead.innerHTML = headerHTML;

                driveTableBody.innerHTML = '';
                banks.forEach((bank, bankIndex) => {
                    const row = document.createElement('tr');
                    row.className = 'bg-white border-b';
                    let rowHTML = `<td class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap">${bank.name}</td>`;
                    months.forEach((_, monthIndex) => {
                        rowHTML += `<td class="px-2 py-3 text-center"><input type="checkbox" id="drive-${bankIndex}-${monthIndex}" class="month-checkbox text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"></td>`;
                    });
                    row.innerHTML = rowHTML;
                    driveTableBody.appendChild(row);

                    bank.drive.forEach((isChecked, monthIndex) => {
                        document.getElementById(`drive-${bankIndex}-${monthIndex}`).checked = isChecked;
                    });
                });
            }

            function renderTaskList() {
                taskListContainer.innerHTML = '';
                for (const day in tasks) {
                    const dayContainer = document.createElement('div');
                    dayContainer.innerHTML = `<h3 class="text-lg font-semibold text-gray-800">${day}</h3>`;
                    const taskGroup = document.createElement('div');
                    taskGroup.className = 'mt-2 space-y-3';
                    tasks[day].forEach(task => {
                        const taskItem = document.createElement('div');
                        taskItem.className = 'task-item flex items-center justify-between p-3 rounded-lg border border-gray-200';
                        taskItem.innerHTML = `
                            <div class="flex items-center"><input id="${task.id}-check" type="checkbox" class="w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"><label for="${task.id}-check" class="ml-3 text-sm font-medium text-gray-900">${task.text}</label></div>
                            <input type="text" id="${task.id}-obs" class="ml-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-1/2 p-2" placeholder="Obs...">
                        `;
                        taskGroup.appendChild(taskItem);
                        const checkbox = taskItem.querySelector(`#${task.id}-check`);
                        const label = taskItem.querySelector(`label[for="${task.id}-check"]`);
                        checkbox.addEventListener('change', () => { label.classList.toggle('completed', checkbox.checked); });
                    });
                    dayContainer.appendChild(taskGroup);
                    taskListContainer.appendChild(dayContainer);
                }
            }
            
            function saveData() {
                const dataToSave = { banks: [], tasks: {} };

                banks.forEach((bank, index) => {
                    const driveStatus = months.map((_, monthIndex) => document.getElementById(`drive-${index}-${monthIndex}`).checked);
                    dataToSave.banks.push({
                        name: bank.name,
                        status: document.getElementById(`date-${index}`).value,
                        obs: document.getElementById(`obs-${index}`).value,
                        checked: document.getElementById(`check-${index}`).checked,
                        drive: driveStatus
                    });
                });

                for (const day in tasks) {
                    tasks[day].forEach(task => {
                        dataToSave.tasks[task.id] = {
                            checked: document.getElementById(`${task.id}-check`).checked,
                            obs: document.getElementById(`${task.id}-obs`).value
                        };
                    });
                }

                localStorage.setItem('financeControlData', JSON.stringify(dataToSave));
                alert('Progresso salvo com sucesso!');
            }

            function loadData() {
                const savedData = JSON.parse(localStorage.getItem('financeControlData'));
                if (!savedData) return;

                if (savedData.banks) {
                    banks = savedData.banks;
                }
                
                renderBankTable();
                renderDriveTable();

                if (savedData.tasks) {
                    for (const day in tasks) {
                        tasks[day].forEach(task => {
                            if (savedData.tasks[task.id]) {
                                const checkbox = document.getElementById(`${task.id}-check`);
                                const label = document.querySelector(`label[for="${task.id}-check"]`);
                                checkbox.checked = savedData.tasks[task.id].checked;
                                document.getElementById(`${task.id}-obs`).value = savedData.tasks[task.id].obs;
                                label.classList.toggle('completed', checkbox.checked);
                            }
                        });
                    }
                }
            }
            
            function clearData() {
                if (confirm('Tem certeza que deseja limpar todos os dados preenchidos? Esta ação não pode ser desfeita.')) {
                    localStorage.removeItem('financeControlData');
                    banks = getInitialBanks();
                    renderBankTable();
                    renderDriveTable();
                    renderTaskList();
                }
            }

            // Inicialização
            banks = getInitialBanks();
            renderBankTable();
            renderDriveTable();
            renderTaskList();
            loadData();

            saveButton.addEventListener('click', saveData);
            clearButton.addEventListener('click', clearData);
        });
    </script>
</body>
</html>
